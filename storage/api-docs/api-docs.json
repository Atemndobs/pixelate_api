{
    "openapi": "3.0.0",
    "info": {
        "title": "Pixelate",
        "description": "Documentation for Pixelate app",
        "version": "1.0.2"
    },
    "servers": [
        {
            "url": "http://localhost:8000",
            "description": "Server"
        }
    ],
    "paths": {
        "/api/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Sign in",
                "description": "Login by email, password",
                "requestBody": {
                    "description": "Pass user credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "fanny256@email.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "pass1234"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "token": {
                                            "type": "string",
                                            "format": "email",
                                            "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sb2NhbGhvc3Q6ODAwMFwvYXBpXC9sb2dpbiIsImlhdCI6MTYwNTM0Nzc0OSwiZXhwIjoxNjA1MzUxMzQ5LCJuYmYiOjE2MDUzNDc3NDksImp0aSI6IlJGUmJtRVdiN244WnlTaWsiLCJzdWIiOjEsInBydiI6IjIzYmQ1Yzg5NDlmNjAwYWRiMzllNzAxYzQwMDg3MmRiN2E1OTc2ZjcifQ.VZq7nu9rkkHRXHcZB68v1vMpnRoMBJGmABElufaVrtk"
                                        },
                                        "token_type": {
                                            "type": "string",
                                            "example": "bearer"
                                        },
                                        "expires_in": {
                                            "type": "number",
                                            "example": 1605351349
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Wrong credentials response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Sorry, wrong email address or password. Please try again"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/logout": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Logout",
                "description": "Logout user and invalidate token",
                "operationId": "App\\Http\\Controllers\\Auth\\LoginController::logout",
                "responses": {
                    "200": {
                        "description": "Logs out logged in user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Logged out successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/register": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Register",
                "description": "Register new user",
                "operationId": "App\\Http\\Controllers\\Auth\\RegisterController::registered",
                "requestBody": {
                    "description": "Pass user credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password",
                                    "username",
                                    "name",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "username": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "bezos"
                                    },
                                    "name": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "Amin Besoz"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "besoz256@email.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "pass1234"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "pass1234"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "example": "Amin Besoz"
                                        },
                                        "username": {
                                            "type": "string",
                                            "example": "bezos"
                                        },
                                        "email": {
                                            "type": "string",
                                            "example": "besoz256@email.com"
                                        },
                                        "id": {
                                            "type": "number",
                                            "example": 25
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "example": "2020-11-27T08:16:31.000000Z"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "example": "2020-11-27T08:16:31.000000Z"
                                        },
                                        "photo_url": {
                                            "type": "string",
                                            "example": "https://www.gravatar.com/avatar/a9d770a5af9a113e77c887c0b772d98fjpg?s=200&d=mm"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Wrong credentials response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "username": {
                                                    "example": [
                                                        "The username has already been taken."
                                                    ]
                                                },
                                                "email": {
                                                    "example": [
                                                        "The email has already been taken."
                                                    ]
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Already Registered",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Please confirm your email"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/designs": {
            "get": {
                "tags": [
                    "Design"
                ],
                "summary": "Get designs that are Live",
                "description": "Get all designs available online (set to live )",
                "operationId": "App\\Http\\Controllers\\Designs\\DesignController::index",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Design"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "UDesign Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/designs/all": {
            "get": {
                "tags": [
                    "Design"
                ],
                "summary": "Get all designs",
                "description": "Get all designs available",
                "operationId": "App\\Http\\Controllers\\Designs\\DesignController::allDesigns",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Design"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "UDesign Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/me": {
            "get": {
                "tags": [
                    "User Profile"
                ],
                "summary": "Retrieve profile information",
                "description": "Get profile short information.  ** Reqiures Authorisation: Add Auth heather by clicking the Lock icon above",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/UserProfile"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "User should be authorized to get profile information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Class MeController",
                                            "type": "string",
                                            "example": "Not authorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "UserProfile": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/User"
                    }
                ]
            },
            "BaseModel": {
                "properties": {
                    "created_at_human": {
                        "description": "Initial creation, Human readable",
                        "type": "string",
                        "readOnly": "true",
                        "example": "2 days ago"
                    },
                    "created_at": {
                        "description": "Initial creation timestamp",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": "true"
                    },
                    "updated_at_human": {
                        "description": "Human readable update time",
                        "type": "string",
                        "readOnly": "true",
                        "example": "2 days ago"
                    },
                    "updated_at": {
                        "description": "Last update timestamp",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": "true"
                    },
                    "deleted_at": {
                        "description": "Soft delete timestamp",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": "true"
                    }
                },
                "type": "object"
            },
            "Comment": {
                "properties": {
                    "id": {
                        "description": "App\\Models\\Comment",
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "created_dates": {
                        "description": "App\\Models\\Comment",
                        "properties": {
                            "created_at_human": {
                                "description": "Date Created formatted",
                                "example": "52 minutes ago"
                            },
                            "created_at": {
                                "description": "Raw unfarmatted Date ",
                                "example": "2020-11-09T20:04:11.000000Z"
                            }
                        },
                        "type": "object"
                    },
                    "updated_dates": {
                        "description": "App\\Models\\Comment",
                        "properties": {
                            "updated_at_human": {
                                "description": "Date Updated formatted",
                                "example": "52 minutes ago"
                            },
                            "updated_at": {
                                "description": "Raw unfarmatted update date ",
                                "example": "2020-11-09T20:04:11.000000Z"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Comment"
                }
            },
            "Design": {
                "properties": {
                    "id": {
                        "description": "App\\Models\\Design",
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "title": {
                        "description": "App\\Models\\Design",
                        "type": "string",
                        "example": "the sea life"
                    },
                    "slug": {
                        "description": "App\\Models\\Design",
                        "type": "string",
                        "example": "the-sea-life"
                    },
                    "disk": {
                        "description": "App\\Models\\Design",
                        "type": "string",
                        "example": "public"
                    },
                    "is_live": {
                        "description": "App\\Models\\Design",
                        "type": "boolean",
                        "example": 0
                    },
                    "images": {
                        "description": "App\\Models\\Design",
                        "properties": {
                            "thumbnail": {
                                "description": "App\\Models\\Design",
                                "type": "string",
                                "example": "http://localhost:8000/storage/uploads/designs/thumbnail/"
                            },
                            "large": {
                                "description": "App\\Models\\Design",
                                "type": "string",
                                "example": "http://localhost:8000/storage/uploads/designs/large/"
                            },
                            "original": {
                                "description": "App\\Models\\Design",
                                "type": "string",
                                "example": "http://localhost:8000/storage/uploads/designs/original/"
                            }
                        },
                        "type": "object"
                    },
                    "likes_count": {
                        "description": "App\\Models\\Design",
                        "type": "integer",
                        "example": 0
                    },
                    "uploaded_successful": {
                        "description": "App\\Models\\Design",
                        "type": "interger",
                        "example": null
                    },
                    "tag_list": {
                        "description": "App\\Models\\Design",
                        "properties": {
                            "tag": {
                                "description": "List of Tags added to design, array of many tags",
                                "example": [
                                    "Cool",
                                    "Bright Day"
                                ]
                            },
                            "normalized": {
                                "description": "List of Tags normalized, lowercase and slugged",
                                "example": [
                                    "cool",
                                    "bright-day"
                                ]
                            }
                        },
                        "type": "object"
                    },
                    "created_dates": {
                        "description": "App\\Models\\Design",
                        "properties": {
                            "created_at_human": {
                                "description": "Date Created formatted",
                                "example": "52 minutes ago"
                            },
                            "created_at": {
                                "description": "Raw unfarmatted Date ",
                                "example": "2020-11-09T20:04:11.000000Z"
                            }
                        },
                        "type": "object"
                    },
                    "updated_dates": {
                        "description": "App\\Models\\Design",
                        "properties": {
                            "updated_at_human": {
                                "description": "Date Updated formatted",
                                "example": "52 minutes ago"
                            },
                            "updated_at": {
                                "description": "Raw unfarmatted update date ",
                                "example": "2020-11-09T20:04:11.000000Z"
                            }
                        },
                        "type": "object"
                    },
                    "user": {
                        "$ref": "#/components/schemas/User"
                    },
                    "comment": {
                        "$ref": "#/components/schemas/Comment"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Design"
                }
            },
            "User": {
                "required": [
                    "password"
                ],
                "properties": {
                    "id": {
                        "description": "App\\Models\\User",
                        "type": "integer",
                        "readOnly": "true",
                        "example": 1
                    },
                    "name": {
                        "description": "App\\Models\\User",
                        "type": "string",
                        "maxLength": 32,
                        "example": "Mittie Morissette"
                    },
                    "username": {
                        "description": "App\\Models\\User",
                        "type": "string",
                        "maxLength": 32,
                        "example": "pierce"
                    },
                    "email": {
                        "description": "User unique email address",
                        "type": "string",
                        "format": "email",
                        "readOnly": "true",
                        "example": "fanny256@email.com"
                    },
                    "email_verified_at": {
                        "description": "Datetime marker of verification status",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": "true",
                        "example": "2019-02-25 12:59:20"
                    },
                    "two_factor_secret": {
                        "description": "App\\Models\\User",
                        "type": "number",
                        "example": null
                    },
                    "two_factor_recovery_codes": {
                        "description": "App\\Models\\User",
                        "type": "number",
                        "example": null
                    },
                    "tagline:": {
                        "description": "App\\Models\\User",
                        "type": "string",
                        "maxLength": 32,
                        "example": "Producer:"
                    },
                    "location": {
                        "description": "App\\Models\\User",
                        "properties": {
                            "type": {
                                "description": "App\\Models\\User",
                                "type": "string",
                                "example": "point"
                            },
                            "coordinates": {
                                "description": "App\\Models\\User",
                                "example": [
                                    8.503972,
                                    51.017243
                                ]
                            }
                        },
                        "type": "object"
                    },
                    "formatted_address": {
                        "description": "App\\Models\\User",
                        "example": "811 Sibyl Bypass Suite 783\\n New Rita, AL 48220-0930"
                    },
                    "available_to_hire": {
                        "description": "App\\Models\\User",
                        "type": "boolean",
                        "example": 1
                    },
                    "about": {
                        "description": "App\\Models\\User",
                        "type": "string",
                        "example": "VERY deeply with a soldier on each."
                    },
                    "trade_id": {
                        "description": "App\\Models\\User",
                        "type": "number",
                        "example": null
                    },
                    "current_team_id": {
                        "description": "App\\Models\\User",
                        "type": "number",
                        "example": null
                    },
                    "profile_photo_path": {
                        "description": "App\\Models\\User",
                        "type": "number",
                        "example": null
                    },
                    "created_at": {
                        "$ref": "#/components/schemas/BaseModel/properties/created_at"
                    },
                    "updated_at": {
                        "$ref": "#/components/schemas/BaseModel/properties/updated_at"
                    },
                    "photo_url:": {
                        "description": "App\\Models\\User",
                        "type": "string",
                        "maxLength": 32,
                        "example": "https://www.gravatar.com/avatar/97bd1823e00f02eb71a0b709425152a7jpg?s=200&d=mm:"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "User"
                }
            }
        },
        "securitySchemes": {
            "token": {
                "type": "apiKey",
                "description": "Example of Auth Header Token (Copy and paste below to authorize)=>\nBearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sb2NhbGhvc3Q6ODAwMFwvYXBpXC9sb2dpbiIsImlhdCI6MTYwNTM0ODU1OSwiZXhwIjoxNjA1MzUyMTU5LCJuYmYiOjE2MDUzNDg1NTksImp0aSI6IjlqMDN0MVVISThoNjlhRUsiLCJzdWIiOjEsInBydiI6IjIzYmQ1Yzg5NDlmNjAwYWRiMzllNzAxYzQwMDg3MmRiN2E1OTc2ZjcifQ.dn45EdZMatpW2zAQcZklDS2902mwVNx44TbkDiiGLXY",
                "name": "Authorization",
                "in": "header"
            }
        }
    },
    "security": [
        []
    ]
}